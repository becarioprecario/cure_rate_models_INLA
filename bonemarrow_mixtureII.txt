model
{
    for (i in 1:n.z) {
        z[idx.z[i]] ~ dbern(eta[idx.z[i]])
    }
    for (i in 1:n.zfixed) {
        z[idx.zfixed[i]] <- 0.00000E+00
    }
    for (i in 1:N) {
        logit(eta[i]) <- betaAll1 + betaAut1 * Auto[i]
        lambda[i] <- exp(betaAll2 + betaAut2 * Auto[i])
        s[i] <- exp(-lambda[i] * pow(time[i], alpha))
        h[i] <- lambda[i] * alpha * pow(time[i], alpha - 1)
        f[i] <- lambda[i] * alpha * pow(time[i], alpha - 1) * 
            exp(-lambda[i] * pow(time[i], alpha))
        L[i] <- pow((1 - eta[i]) * f[i], delta[i]) * pow((eta[i]) + 
            (1 - eta[i]) * s[i], 1 - delta[i])
        logL[i] <- log(L[i])
        phi[i] <- C - logL[i]
        zeros[i] ~ dpois(phi[i])
    }
    betaAll1 ~ dnorm(0.00000E+00, 0.001)
    betaAut1 ~ dnorm(0.00000E+00, 0.001)
    betaAll2 ~ dnorm(0.00000E+00, 0.001)
    betaAut2 ~ dnorm(0.00000E+00, 0.001)
    sigma ~ dunif(0.00000E+00, 10)
    alpha <- 1/sigma
}
